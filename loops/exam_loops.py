# 1 range(6) ‚úèÔ∏è

# for i in range(6):
#     print(i)

# 2 range(2, 6) ‚úèÔ∏è

# for i in range(2, 6):
#     print(i)

# 3  range(0, 501, 100) ‚úèÔ∏è

# for i in range(0, 501, 100):
#     print(i)

# 0
# 100
# 200
# 300
# 400
# 500

# 4  range(10, 5, -1) ‚úèÔ∏è

# 10,9,8,7,6

# 5 ‚úèÔ∏è

# for i in range(10, 25):
#     print("Python awesome!")

# 6 ‚úèÔ∏è

# n = int(input())
# counter = 0

# for i in range(1, n + 1):
#     if i % 3 == 0 and i % 7 != 0:
#         counter += 1

# print(counter)

# –≤—ã–≤–æ–¥–∏—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∏—Å–µ–ª –æ—Ç 1 –¥–æ n –∫—Ä–∞—Ç–Ω—ã—Ö 3, –Ω–æ –Ω–µ –∫—Ä–∞—Ç–Ω—ã—Ö 7

# 7 ‚úèÔ∏è 7 —Ä–∞–∑

# i = 4
# while i <= 10:
#     print("Python!")
#     i += 1

# 8 ‚úèÔ∏è

# n = int(input())
# res = 1
# i = 2
# while i <= n:
#     res *= i
#     i += 1
# print(res)
# –≤—ã–≤–æ–¥–∏—Ç —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª —á–∏—Å–ª–∞ n

# 9 ‚úèÔ∏è

# n = int(input())
# i = 2
# while n % i != 0:
#     i += 1
# print(i)
# –≤—ã–≤–æ–¥–∏—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –¥–µ–ª–∏—Ç–µ–ª—å —á–∏—Å–ª–∞, –æ—Ç–ª–∏—á–Ω—ã–π –æ—Ç –µ–¥–∏–Ω–∏—Ü—ã

# REVIEW 7 üå∂Ô∏è

# WAS
# n = input()
# s = 0
# while n > 10:
#     if n % 2 == 1:
#         s = n % 10
#     n //= 10
# print(s)

# –û—à–∏–±–∫–∏ –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ:

# n —Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –∫–∞–∫ —Å—Ç—Ä–æ–∫–∞, –∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Ä–∞–±–æ—Ç–∞—Ç—å —Å —á–∏—Å–ª–∞–º–∏, –ø–æ—ç—Ç–æ–º—É –µ–≥–æ –Ω—É–∂–Ω–æ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ.

# –£—Å–ª–æ–≤–∏–µ while n > 10: –Ω–µ –ø–æ–∑–≤–æ–ª–∏—Ç –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —á–∏—Å–ª–∞ –º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω—ã–µ 10. –ù—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å while n > 0:.

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —á–µ—Ç–Ω–æ—Å—Ç—å if n % 2 == 1: –Ω–µ–≤–µ—Ä–Ω–∞, —Ç–∞–∫ –∫–∞–∫ –æ–Ω–∞ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞ –Ω–µ—á–µ—Ç–Ω–æ—Å—Ç—å. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–≤–µ—Ä—è—Ç—å —á–µ—Ç–Ω–æ—Å—Ç—å if n % 10 % 2 == 0:.

# –í–Ω—É—Ç—Ä–∏ —É—Å–ª–æ–≤–∏—è, s = n % 10 –Ω—É–∂–Ω–æ —Å–∫–ª–∞–¥—ã–≤–∞—Ç—å —á–µ—Ç–Ω—ã–µ —Ü–∏—Ñ—Ä—ã, –∞ –Ω–µ –ø—Ä–∏—Å–≤–∞–∏–≤–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Ü–∏—Ñ—Ä—ã.

# –í —Å—Ç—Ä–æ–∫–µ n //= 10 —É–º–µ–Ω—å—à–∞–µ–º —á–∏—Å–ª–æ, —á—Ç–æ–±—ã —Ä–∞–±–æ—Ç–∞—Ç—å —Å –∫–∞–∂–¥–æ–π —Ü–∏—Ñ—Ä–æ–π –ø–æ –æ—Ç–¥–µ–ª—å–Ω–æ—Å—Ç–∏.

# n = int(input())
# s = 0
# while n > 0:
#     digit = n % 10
#     if n % 2 == 0:
#         s += digit
#     n //= 10
# print(s)


# REVIEW 8 üå∂Ô∏è

# –ù–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–æ—Å—Ç—É–ø–∞–µ—Ç –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏–∑ 8 —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª. –ò–∑–≤–µ—Å—Ç–Ω–æ, —á—Ç–æ –≤–≤–æ–¥–∏–º—ã–µ —á–∏—Å–ª–∞ –ø–æ –∞–±—Å–æ–ª—é—Ç–Ω–æ–π –≤–µ–ª–∏—á–∏–Ω–µ –Ω–µ –ø—Ä–µ–≤—ã—à–∞—é—Ç 10**12.

# –ù—É–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç –Ω–∞ —ç–∫—Ä–∞–Ω –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ–ª—è—â–∏—Ö—Å—è –Ω–∞—Ü–µ–ª–æ –Ω–∞ 4 —á–∏—Å–µ–ª –≤ –∏—Å—Ö–æ–¥–Ω–æ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –¥–µ–ª—è—â–µ–µ—Å—è –Ω–∞—Ü–µ–ª–æ –Ω–∞ 4 —á–∏—Å–ª–æ. –ï—Å–ª–∏ –¥–µ–ª—è—â–∏—Ö—Å—è –Ω–∞—Ü–µ–ª–æ –Ω–∞ 4 —á–∏—Å–µ–ª –Ω–µ—Ç, –Ω–∞ —ç–∫—Ä–∞–Ω —Ç—Ä–µ–±—É–µ—Ç—Å—è –≤—ã–≤–µ—Å—Ç–∏ ¬´NO¬ª. –ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç —Ç–æ—Ä–æ–ø–∏–ª—Å—è –∏ –Ω–∞–ø–∏—Å–∞–ª –ø—Ä–æ–≥—Ä–∞–º–º—É –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ.

# –ù–∞–π–¥–∏—Ç–µ –≤—Å–µ –æ—à–∏–±–∫–∏ –≤ —ç—Ç–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ (–∏—Ö –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–¥–Ω–∞ –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ). –ò–∑–≤–µ—Å—Ç–Ω–æ, —á—Ç–æ –∫–∞–∂–¥–∞—è –æ—à–∏–±–∫–∞ –∑–∞—Ç—Ä–∞–≥–∏–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É –∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥—Ä—É–≥–∏—Ö —Å—Ç—Ä–æ–∫.

# was

# n = 7
# count = 0
# maximum = 1000
# for i in range(1, n + 1):
#     x = int(input())
#     if x // 4 == 0:
#         count += 1
#         if x < maximum:
#             maximum = x
# if count > 0:
#     print(count)
#     print(maximum)
# else:
#     print('NO')

# CORRECT


# n = 8
# count = 0
# maximum = None

# for i in range(n):
#     x = int(input())
#     if x % 4 == 0:
#         count += 1
#         if maximum is None or x > maximum:
#             maximum = x

# if count > 0:
#     print(count)
#     print(maximum)
# else:
#     print('NO')

# REVIEW 9 ü™Ñ

# –ù–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–æ—Å—Ç—É–ø–∞–µ—Ç –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏–∑ 4 —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª. –ò–∑–≤–µ—Å—Ç–Ω–æ, —á—Ç–æ –≤–≤–æ–¥–∏–º—ã–µ —á–∏—Å–ª–∞ –ø–æ –∞–±—Å–æ–ª—é—Ç–Ω–æ–π –≤–µ–ª–∏—á–∏–Ω–µ –Ω–µ –ø—Ä–µ–≤—ã—à–∞—é—Ç 10**8.
# –ù—É–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç –Ω–∞ —ç–∫—Ä–∞–Ω –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ—á–µ—Ç–Ω—ã—Ö —á–∏—Å–µ–ª –≤ –∏—Å—Ö–æ–¥–Ω–æ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –Ω–µ—á–µ—Ç–Ω–æ–µ —á–∏—Å–ª–æ. –ï—Å–ª–∏ –Ω–µ—á–µ—Ç–Ω—ã—Ö —á–∏—Å–µ–ª –Ω–µ—Ç, —Ç—Ä–µ–±—É–µ—Ç—Å—è –Ω–∞ —ç–∫—Ä–∞–Ω –≤—ã–≤–µ—Å—Ç–∏ ¬´NO¬ª. –ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç —Ç–æ—Ä–æ–ø–∏–ª—Å—è –∏ –Ω–∞–ø–∏—Å–∞–ª –ø—Ä–æ–≥—Ä–∞–º–º—É –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ.

# –ù–∞–π–¥–∏—Ç–µ –≤—Å–µ –æ—à–∏–±–∫–∏ –≤ —ç—Ç–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ (–∏—Ö –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–¥–Ω–∞ –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ). –ò–∑–≤–µ—Å—Ç–Ω–æ, —á—Ç–æ –∫–∞–∂–¥–∞—è –æ—à–∏–±–∫–∞ –∑–∞—Ç—Ä–∞–≥–∏–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É –∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥—Ä—É–≥–∏—Ö —Å—Ç—Ä–æ–∫.

# WAS

# n = 4
# count = 0
# maximum = 999
# for i in range(1, n + 1):
#     x = int(input())
#     if x % 2 != 0:
#         count += 1
#         if x > maximum:
#             maximum = i
#             break
# if count > 0:
#     print(count)
#     print(maximum)
# else:
#     print('NO')

# CORRECT

# n = 4
# count = 0
# maximum = None

# for i in range(n):
#     x = int(input())
#     if x % 2 != 0:
#         count += 1
#         if maximum is None or x > maximum:
#             maximum = x

# if count > 0:
#     print(count)
#     print(maximum)
# else:
#     print("NO")

# Star frame 10 ‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è

# –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ n. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –ø–µ—á–∞—Ç–∞–µ—Ç –∑–≤–µ–∑–¥–Ω—É—é —Ä–∞–º–∫—É —Ä–∞–∑–º–µ—Ä–∞–º–∏ n X 19.

# n = int(input())

# for i in range(n):
#     for j in range(19):
#         if i == 0 or i == n - 1 or j == 0 or j == 18:
#             print("*", end="")
#         else:
#             print(" ", end="")
#     print()

# 11 ‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è

# There is n. n > 99. Find the 3rd number from the beggining.

# n = int(input())

# if n < 100:
#     print("–û—à–∏–±–∫–∞: –ß–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 99.")
# else:
#     # –£–¥–∞–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–≤–µ —Ü–∏—Ñ—Ä—ã, —á—Ç–æ–±—ã –æ—Å—Ç–∞–ª–∞—Å—å —Ç–æ–ª—å–∫–æ —Ç—Ä–µ—Ç—å—è —Ü–∏—Ñ—Ä–∞ —Å –Ω–∞—á–∞–ª–∞
#     while n >= 1000:  # –ü–æ–∫–∞ —É –Ω–∞—Å –±–æ–ª—å—à–µ 3 —Ü–∏—Ñ—Ä, —É–¥–∞–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ
#         n //= 10

#     # –¢–µ–ø–µ—Ä—å n —Å–æ–¥–µ—Ä–∂–∏—Ç —á–∏—Å–ª–æ —Å —Ç—Ä–µ–º—è —Ü–∏—Ñ—Ä–∞–º–∏, —Ç—Ä–µ—Ç—å—è —Ü–∏—Ñ—Ä–∞ —Å –Ω–∞—á–∞–ª–∞ –±—É–¥–µ—Ç –≤ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Ü–∏—Ñ—Ä–µ
#     third_digit = n % 10

#     print(third_digit)

# ‚≠êÔ∏è


# # OPTIONS
# n = int(input())
# while n > 999:
#     n //= 10

# print(n % 10)

# 12 ALL TOGETHER ‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è

# There is number - n.
# Find: how many digits 3 are there in it.
# How many times the last digit is there.
# The quantity of even digits.
# the sum of its digits which > 5
# the multiplication of digits which > 7 ( if there are no 7, print 1, if there is only one digit print it)
# how many times there 0 and 5 (all together in sum)

# n = int(input())  # –ß—Ç–µ–Ω–∏–µ —á–∏—Å–ª–∞

# # –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
# count_3 = 0
# count_last_digit = 0
# even_digits_count = 0
# sum_digits_greater_than_5 = 0
# digits_greater_than_7 = []
# count_0_and_5 = 0

# # –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Ü–∏—Ñ—Ä—É —á–∏—Å–ª–∞
# last_digit = n % 10

# # –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è —Ü–∏—Ñ—Ä –±–æ–ª—å—à–µ 7
# product_of_digits_greater_than_7 = 1
# found_digits_greater_than_7 = False

# # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ü–∏—Ñ—Ä—ã —á–∏—Å–ª–∞
# while n > 0:
#     digit = n % 10  # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Ü–∏—Ñ—Ä—É
#     n //= 10  # –£–±–∏—Ä–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Ü–∏—Ñ—Ä—É –∏–∑ —á–∏—Å–ª–∞

#     # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ü–∏—Ñ—Ä—É –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —É—Å–ª–æ–≤–∏—è–º
#     if digit == 3:
#         count_3 += 1

#     if digit == last_digit:
#         count_last_digit += 1

#     if digit % 2 == 0:
#         even_digits_count += 1

#     if digit > 5:
#         sum_digits_greater_than_5 += digit

#     if digit > 7:
#         digits_greater_than_7.append(digit)
#         found_digits_greater_than_7 = True

#     if digit == 0 or digit == 5:
#         count_0_and_5 += 1

# # –ü—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Ü–∏—Ñ—Ä –±–æ–ª—å—à–µ 7
# if found_digits_greater_than_7:
#     if len(digits_greater_than_7) == 1:
#         product_of_digits_greater_than_7 = digits_greater_than_7[0]
#     else:
#         from functools import reduce
#         from operator import mul
#         product_of_digits_greater_than_7 = reduce(mul, digits_greater_than_7)
# else:
#     product_of_digits_greater_than_7 = 1

# # –í—ã–≤–æ–¥ –≤—Å–µ—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
# print(count_3)
# print(count_last_digit)
# print(even_digits_count)
# print(sum_digits_greater_than_5)
# print(product_of_digits_greater_than_7)
# print(count_0_and_5)

# –ß–∏—Å–ª–∞ –†–∞–º–∞–Ω—É–¥–∂–∞–Ω–∞ 13 üå∂Ô∏è

# for i in range(100000):

#     j1 = -1

#     k1 = -1

#     count = 0

#     for j in range(int(i ** (1 / 3)) + 1):

#         if j == k1:

#             continue

#         for k in range(int(i ** (1 / 3)) + 1):

#             if k == j1:

#                 continue

#             if i == j**3 + k**3:

#                 count += 1

#                 j1 = j

#                 k1 = k

#     if count >= 2:

#         print(i)
